"use strict";(self.webpackChunkreact_native_website=self.webpackChunkreact_native_website||[]).push([[68675],{35318:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(27378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),u=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=r,h=c["".concat(p,".").concat(m)]||c[m]||s[m]||o;return n?a.createElement(h,i(i({ref:t},d),{},{components:n})):a.createElement(h,i({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},11674:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(63445);const r=!!a.Z.canUseDOM&&navigator.platform.startsWith("Mac"),o=!!a.Z.canUseDOM&&navigator.platform.startsWith("Win"),i={defaultGuide:"native",defaultOs:r?"macos":o?"windows":"linux",defaultPackageManager:"npm",defaultPlatform:r?"ios":"android",defaultSyntax:"functional",getDevNotesTabs:(e=["android","ios","web","windows"])=>[e.includes("android")?{label:"Android",value:"android"}:void 0,e.includes("ios")?{label:"iOS",value:"ios"}:void 0,e.includes("web")?{label:"Web",value:"web"}:void 0,e.includes("windows")?{label:"Windows",value:"windows"}:void 0].filter(Boolean),guides:[{label:"\u5b8c\u6574\u539f\u751f\u73af\u5883",value:"native"},{label:"\u7b80\u6613\u6c99\u76d2\u73af\u5883",value:"quickstart"}],oses:[{label:"macOS",value:"macos"},{label:"Windows",value:"windows"},{label:"Linux",value:"linux"}],packageManagers:[{label:"npm",value:"npm"},{label:"Yarn",value:"yarn"}],platforms:[{label:"Android",value:"android"},{label:"iOS",value:"ios"}],syntax:[{label:"\u51fd\u6570\u5f0f\u7ec4\u4ef6",value:"functional"},{label:"Class \u7ec4\u4ef6",value:"classical"}]}},86386:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(27378),r=n(38944);const o="tabItem_wHwb";var i=Object.defineProperty,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;function s({children:e,hidden:t,className:n}){return a.createElement("div",((e,t)=>{for(var n in t||(t={}))p.call(t,n)&&d(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&d(e,n,t[n]);return e})({role:"tabpanel",className:(0,r.Z)(o,n)},{hidden:t}),e)}},48375:(e,t,n)=>{n.d(t,{Z:()=>D});var a=n(27378),r=n(38944),o=n(12112),i=n(35331),l=n(14953),p=n(27886),u=n(7106),d=Object.defineProperty,s=Object.defineProperties,c=Object.getOwnPropertyDescriptors,m=Object.getOwnPropertySymbols,h=Object.prototype.hasOwnProperty,f=Object.prototype.propertyIsEnumerable,g=(e,t,n)=>t in e?d(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;function k(e){return function(e){var t,n;return null!=(n=null==(t=a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})))?void 0:t.filter(Boolean))?n:[]}(e).map((({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a})))}function b(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=null!=t?t:k(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function v({value:e,tabValues:t}){return t.some((t=>t.value===e))}function N({queryString:e=!1,groupId:t}){const n=(0,i.k6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=t?t:null}({queryString:e,groupId:t});return[(0,l._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);var a,o;t.set(r,e),n.replace((a=((e,t)=>{for(var n in t||(t={}))h.call(t,n)&&g(e,n,t[n]);if(m)for(var n of m(t))f.call(t,n)&&g(e,n,t[n]);return e})({},n.location),o={search:t.toString()},s(a,c(o))))}),[r,n])]}function y(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=b(e),[i,l]=(0,a.useState)((()=>function({defaultValue:e,tabValues:t}){var n;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!v({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const a=null!=(n=t.find((e=>e.default)))?n:t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[p,d]=N({queryString:n,groupId:r}),[s,c]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,u.Nk)(t);return[n,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:r}),m=(()=>{const e=null!=p?p:s;return v({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!v({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),c(e)}),[d,c,o]),tabValues:o}}var C=n(14185);const w="tabList_J5MA",M="tabItem_l0OV";var S=Object.defineProperty,x=Object.defineProperties,T=Object.getOwnPropertyDescriptors,O=Object.getOwnPropertySymbols,A=Object.prototype.hasOwnProperty,j=Object.prototype.propertyIsEnumerable,_=(e,t,n)=>t in e?S(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,I=(e,t)=>{for(var n in t||(t={}))A.call(t,n)&&_(e,n,t[n]);if(O)for(var n of O(t))j.call(t,n)&&_(e,n,t[n]);return e};function E({className:e,block:t,selectedValue:n,selectValue:i,tabValues:l}){const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{const t=e.currentTarget,a=p.indexOf(t),r=l[a].value;r!==n&&(u(t),i(r))},s=e=>{var t,n;let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;a=null!=(t=p[n])?t:p[0];break}case"ArrowLeft":{const t=p.indexOf(e.currentTarget)-1;a=null!=(n=p[t])?n:p[p.length-1];break}}null==a||a.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},e)},l.map((({value:e,label:t,attributes:o})=>{return a.createElement("li",(i=I({role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,key:e,ref:e=>p.push(e),onKeyDown:s,onClick:d},o),l={className:(0,r.Z)("tabs__item",M,null==o?void 0:o.className,{"tabs__item--active":n===e})},x(i,T(l))),null!=t?t:e);var i,l})))}function P({lazy:e,children:t,selectedValue:n}){const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function R(e){const t=y(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",w)},a.createElement(E,I(I({},e),t)),a.createElement(P,I(I({},e),t)))}function D(e){const t=(0,C.Z)();return a.createElement(R,I({key:String(t)},e))}},31043:(e,t,n)=>{n.d(t,{ZP:()=>m});var a=n(35318),r=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,d=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&d(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&d(e,n,t[n]);return e};const c={toc:[]};function m(e){var t,n=e,{components:r}=n,d=((e,t)=>{var n={};for(var a in e)p.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&l)for(var a of l(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=s(s({},c),d),o(t,i({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("admonition",s({},{title:"\u6ce8\u610f",type:"caution"}),(0,a.kt)("p",{parentName:"admonition"},"\u8fd9\u4e2a\u6587\u6863\u4ecd\u7136\u662f",(0,a.kt)("strong",{parentName:"p"},"\u5b9e\u9a8c\u6027"),"\u7684\uff0c\u968f\u7740\u6211\u4eec\u7684\u8fed\u4ee3\uff0c\u7ec6\u8282\u4f1a\u6709\u53d8\u5316\u3002\u6b22\u8fce\u5728",(0,a.kt)("a",s({parentName:"p"},{href:"https://github.com/reactwg/react-native-new-architecture/discussions/8"}),"\u5de5\u4f5c\u5c0f\u7ec4\u5185\u7684\u8ba8\u8bba"),"\u4e2d\u5206\u4eab\u4f60\u7684\u53cd\u9988\u3002"),(0,a.kt)("p",{parentName:"admonition"},"\u6b64\u5916\uff0c\u5b83\u8fd8\u5305\u542b\u51e0\u4e2a",(0,a.kt)("strong",{parentName:"p"},"\u624b\u52a8\u6b65\u9aa4"),"\u3002\u8bf7\u6ce8\u610f\u65b0\u67b6\u6784\u5c1a\u672a\u7a33\u5b9a\u4e0b\u6765\uff0c\u6700\u7ec8\u7684\u5f00\u53d1\u8005\u4f53\u9a8c\u4f1a\u7ee7\u7eed\u8fed\u4ee3\u6539\u5584\u3002\u6211\u4eec\u6b63\u5728\u52aa\u529b\u5f00\u53d1\u5de5\u5177\u3001\u6a21\u677f\u548c\u5e93\uff0c\u4ee5\u5e2e\u52a9\u4f60\u5728\u65b0\u67b6\u6784\u4e0a\u5feb\u901f\u5165\u95e8\uff0c\u800c\u4e0d\u9700\u8981\u7ecf\u5386\u6574\u4e2a\u8bbe\u7f6e\u8fc7\u7a0b\u3002")))}m.isMDXComponent=!0},81289:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>v,contentTitle:()=>k,default:()=>C,frontMatter:()=>g,metadata:()=>b,toc:()=>N});var a=n(35318),r=n(48375),o=n(86386),i=n(11674),l=n(31043),p=Object.defineProperty,u=Object.defineProperties,d=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,h=(e,t,n)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,f=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&h(e,n,t[n]);if(s)for(var n of s(t))m.call(t,n)&&h(e,n,t[n]);return e};const g={id:"cxx-cxxturbomodules",title:"C++ Turbo Native Modules"},k=void 0,b={unversionedId:"the-new-architecture/cxx-cxxturbomodules",id:"version-0.71/the-new-architecture/cxx-cxxturbomodules",title:"C++ Turbo Native Modules",description:"This guide shows you how to implement a Turbo Native Module using C++ only, a way to share the same implementation with any supported platform (Android, iOS, macOS or Windows).",source:"@site/versioned_docs/version-0.71/the-new-architecture/cxx-cxxturbomodules.md",sourceDirName:"the-new-architecture",slug:"/the-new-architecture/cxx-cxxturbomodules",permalink:"/docs/0.71/the-new-architecture/cxx-cxxturbomodules",draft:!1,editUrl:"https://github.com/reactnativecn/react-native-website/blob/production/cnwebsite/../cndocs/the-new-architecture/cxx-cxxturbomodules.md",tags:[],version:"0.71",frontMatter:{id:"cxx-cxxturbomodules",title:"C++ Turbo Native Modules"},sidebar:"docs",previous:{title:"Codegen",permalink:"/docs/0.71/the-new-architecture/pillars-codegen"},next:{title:"Supporting Custom C++ Types",permalink:"/docs/0.71/the-new-architecture/cxx-custom-types"}},v={},N=[{value:"How to Create a C++ Turbo Native Module",id:"how-to-create-a-c-turbo-native-module",level:2},{value:"Setup a Test App for the New Architecture",id:"setup-a-test-app-for-the-new-architecture",level:3},{value:"Turbo Module Folder Setup",id:"turbo-module-folder-setup",level:3},{value:"1. JavaScript Specification",id:"1-javascript-specification",level:2},{value:"2. Codegen Configuration",id:"2-codegen-configuration",level:2},{value:"iOS: Create the <code>podspec</code> file",id:"ios-create-the-podspec-file",level:3},{value:"Android: <code>build.gradle</code>, <code>CMakeLists.txt</code>, <code>Onload.cpp</code>",id:"android-buildgradle-cmakeliststxt-onloadcpp",level:3},{value:"3. Module Registration",id:"3-module-registration",level:2},{value:"iOS",id:"ios",level:3},{value:"Android",id:"android",level:3},{value:"4. C++ Native Code",id:"4-c-native-code",level:2},{value:"Run Codegen",id:"run-codegen",level:3},{value:"Implementation",id:"implementation",level:3},{value:"5. Adding the C++ Turbo Native Module to your App",id:"5-adding-the-c-turbo-native-module-to-your-app",level:2},{value:"App TurboModuleProvider Optional",id:"app-turbomoduleprovider-optional",level:2},{value:"Calling OS specific APIs",id:"calling-os-specific-apis",level:2},{value:"Extending C++ Turbo Native Modules",id:"extending-c-turbo-native-modules",level:2}],y={toc:N};function C(e){var t,n=e,{components:p}=n,h=((e,t)=>{var n={};for(var a in e)c.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&s)for(var a of s(e))t.indexOf(a)<0&&m.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=f(f({},y),h),u(t,d({components:p,mdxType:"MDXLayout"}))),(0,a.kt)(l.ZP,{mdxType:"NewArchitectureWarning"}),(0,a.kt)("p",null,"This guide shows you how to implement a Turbo Native Module using C++ only, a way to share the same implementation with any supported platform (Android, iOS, macOS or Windows)."),(0,a.kt)("p",null,"Before continuing with this guide, please read the ",(0,a.kt)("a",f({parentName:"p"},{href:"/docs/0.71/the-new-architecture/pillars-turbomodules"}),"Turbo Native Modules")," section. As a further reference, we prepared an example for the RNTester app (",(0,a.kt)("a",f({parentName:"p"},{href:"https://github.com/facebook/react-native/tree/main/packages/rn-tester/NativeCxxModuleExample"}),"NativeCxxModuleExample"),") and a sample run in our community repository (",(0,a.kt)("a",f({parentName:"p"},{href:"https://github.com/react-native-community/RNNewArchitectureApp/tree/run/pure-cxx-module"}),"run/pure-cxx-module"),")."),(0,a.kt)("admonition",f({},{title:"\u6ce8\u610f",type:"caution"}),(0,a.kt)("p",{parentName:"admonition"},"C++ Turbo Native Modules work with the ",(0,a.kt)("strong",{parentName:"p"},"New Architecture")," enabled.\nTo migrate to the ",(0,a.kt)("strong",{parentName:"p"},"New Architecture"),", follow the ",(0,a.kt)("a",f({parentName:"p"},{href:"../new-architecture-intro"}),"Migration guide"))),(0,a.kt)("h2",f({},{id:"how-to-create-a-c-turbo-native-module"}),"How to Create a C++ Turbo Native Module"),(0,a.kt)("p",null,"To create a C++ Turbo Native Module, you need to:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Define the JavaScript specification."),(0,a.kt)("li",{parentName:"ol"},"Configure Codegen to generate the scaffolding."),(0,a.kt)("li",{parentName:"ol"},"Register the native module."),(0,a.kt)("li",{parentName:"ol"},"Write the native code to finish implementing the module.")),(0,a.kt)("h3",f({},{id:"setup-a-test-app-for-the-new-architecture"}),"Setup a Test App for the New Architecture"),(0,a.kt)("p",null,"As first step, create a new application:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-sh"}),"npx react-native@v0.71.0-rc.3 init CxxTurboModulesGuide --version v0.71.0-rc.3\ncd CxxTurboModulesGuide\nyarn install\n")),(0,a.kt)("p",null,"On Android enable the New Architecture by modifying the ",(0,a.kt)("inlineCode",{parentName:"p"},"android/gradle.properties")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-diff"}),"- newArchEnabled=false\n+ newArchEnabled=true\n")),(0,a.kt)("p",null,"On iOS enable the New Architecture when running ",(0,a.kt)("inlineCode",{parentName:"p"},"pod install")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ios")," folder:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-sh"}),"RCT_NEW_ARCH_ENABLED=1 bundle exec pod install\n")),(0,a.kt)("h3",f({},{id:"turbo-module-folder-setup"}),"Turbo Module Folder Setup"),(0,a.kt)("p",null,"Create a ",(0,a.kt)("inlineCode",{parentName:"p"},"tm")," folder inside the project. It will contain all C++ TurboModules of your application. The final result should look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-sh"}),"CxxTurboModulesGuide\n\u251c\u2500\u2500 android\n\u251c\u2500\u2500 ios\n\u251c\u2500\u2500 js\n\u2514\u2500\u2500 tm\n")),(0,a.kt)("h2",f({},{id:"1-javascript-specification"}),"1. JavaScript Specification"),(0,a.kt)("p",null,"Create the following spec inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"tm")," folder:"),(0,a.kt)(r.Z,{groupId:"turbomodule-specs",defaultValue:i.Z.defaultJavaScriptSpecLanguages,values:i.Z.javaScriptSpecLanguages,mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"typescript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-typescript",metastring:'title="NativeSampleModule.ts"',title:'"NativeSampleModule.ts"'}),"import type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\n// import type {TurboModule} from 'react-native'; in future versions\nimport {TurboModuleRegistry} from 'react-native';\n\nexport interface Spec extends TurboModule {\n  readonly reverseString: (input: string) => string;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>(\n  'NativeSampleModule',\n);\n"))),(0,a.kt)(o.Z,{value:"flow",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-js",metastring:'title="NativeSampleModule.js"',title:'"NativeSampleModule.js"'}),"// @flow\nimport type {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';\n// import type {TurboModule} from 'react-native'; in future versions\nimport {TurboModuleRegistry} from 'react-native';\n\nexport interface Spec extends TurboModule {\n  +reverseString: (input: string) => string;\n}\n\nexport default (TurboModuleRegistry.getEnforcing<Spec>(\n  'NativeSampleModule',\n): Spec);\n")))),(0,a.kt)("h2",f({},{id:"2-codegen-configuration"}),"2. Codegen Configuration"),(0,a.kt)("p",null,"Next, you need to add some configuration for ",(0,a.kt)("a",f({parentName:"p"},{href:"/docs/0.71/the-new-architecture/pillars-codegen"}),(0,a.kt)("strong",{parentName:"a"},"Codegen")),"."),(0,a.kt)("h1",f({},{id:"application"}),"Application"),(0,a.kt)("p",null,"Update your app's ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file with the following entries:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-json",metastring:'title="package.json"',title:'"package.json"'}),'{\n  // ...\n  "description": "React Native with Cxx Turbo Native Modules",\n  "author": "<Your Name> <your_email@your_provider.com> (https://github.com/<your_github_handle>)",\n  "license": "MIT",\n  "homepage": "https://github.com/<your_github_handle>/#readme",\n  // ...\n  "codegenConfig": {\n    "name": "AppSpecs",\n    "type": "all",\n    "jsSrcsDir": "tm",\n    "android": {\n      "javaPackageName": "com.facebook.fbreact.specs"\n    }\n  }\n}\n')),(0,a.kt)("p",null,"It adds necessary properties which we will later re-use in the iOS ",(0,a.kt)("inlineCode",{parentName:"p"},"podspec")," file and configures ",(0,a.kt)("strong",{parentName:"p"},"Codegen")," to search for specs inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"tm")," folder."),(0,a.kt)("admonition",f({},{title:"\u6ce8\u610f",type:"caution"}),(0,a.kt)("p",{parentName:"admonition"},"C++ Turbo Native Modules don't autolink and need to be manually included into the app with the described steps below.")),(0,a.kt)("h3",f({},{id:"ios-create-the-podspec-file"}),"iOS: Create the ",(0,a.kt)("inlineCode",{parentName:"h3"},"podspec")," file"),(0,a.kt)("p",null,"For iOS, you'll need to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"AppTurboModules.podspec")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"tm")," folder - which will look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-ruby",metastring:'title="AppTurboModules.podspec"',title:'"AppTurboModules.podspec"'}),'require "json"\n\npackage = JSON.parse(File.read(File.join(__dir__, "../package.json")))\n\nPod::Spec.new do |s|\n  s.name            = "AppTurboModules"\n  s.version         = package["version"]\n  s.summary         = package["description"]\n  s.description     = package["description"]\n  s.homepage        = package["homepage"]\n  s.license         = package["license"]\n  s.platforms       = { :ios => "12.4" }\n  s.author          = package["author"]\n  s.source          = { :git => package["repository"], :tag => "#{s.version}" }\n  s.source_files    = "**/*.{h,cpp}"\n  s.pod_target_xcconfig = {\n    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17"\n  }\n  install_modules_dependencies(s)\nend\n')),(0,a.kt)("p",null,"You need to add it as a dependency to your application in ",(0,a.kt)("inlineCode",{parentName:"p"},"ios/Podfile"),", e.g., after the ",(0,a.kt)("inlineCode",{parentName:"p"},"use_react_native!(...)")," section:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-ruby"}),"if ENV['RCT_NEW_ARCH_ENABLED'] == '1'\n  pod 'AppTurboModules', :path => \"./../tm\"\nend\n")),(0,a.kt)("h3",f({},{id:"android-buildgradle-cmakeliststxt-onloadcpp"}),"Android: ",(0,a.kt)("inlineCode",{parentName:"h3"},"build.gradle"),", ",(0,a.kt)("inlineCode",{parentName:"h3"},"CMakeLists.txt"),", ",(0,a.kt)("inlineCode",{parentName:"h3"},"Onload.cpp")),(0,a.kt)("p",null,"For Android, you'll need to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"CMakeLists.txt")," file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"tm")," folder - which will look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-cmake"}),"cmake_minimum_required(VERSION 3.13)\nset(CMAKE_VERBOSE_MAKEFILE on)\n\nadd_compile_options(\n        -fexceptions\n        -frtti\n        -std=c++17)\n\nfile(GLOB tm_SRC CONFIGURE_DEPENDS *.cpp)\nadd_library(tm STATIC ${tm_SRC})\n\ntarget_include_directories(tm PUBLIC .)\ntarget_include_directories(react_codegen_AppSpecs PUBLIC .)\n\ntarget_link_libraries(tm\n        jsi\n        react_nativemodule_core\n        react_codegen_AppSpecs)\n")),(0,a.kt)("p",null,"It defines the ",(0,a.kt)("inlineCode",{parentName:"p"},"tm")," folder as a source for native code and sets up necessary dependencies."),(0,a.kt)("p",null,"You need to add it as a dependency to your application in ",(0,a.kt)("inlineCode",{parentName:"p"},"android/app/build.gradle"),", e.g., at the very end of that file:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-kotlin",metastring:'title="build.gradle"',title:'"build.gradle"'}),'android {\n   externalNativeBuild {\n       cmake {\n           path "src/main/jni/CMakeLists.txt"\n       }\n   }\n}\n')),(0,a.kt)("admonition",f({},{title:"\u5907\u6ce8",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"Ensure to pick the correct ",(0,a.kt)("strong",{parentName:"p"},"android/app/build.gradle")," file and not android/build.gradle.")),(0,a.kt)("h2",f({},{id:"3-module-registration"}),"3. Module Registration"),(0,a.kt)("h3",f({},{id:"ios"}),"iOS"),(0,a.kt)("p",null,"To register a C++ Turbo Native Module in your app you will need to update ",(0,a.kt)("inlineCode",{parentName:"p"},"ios/CxxTurboModulesGuide/AppDelegate.mm")," with the following entries:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-diff"}),'#import "AppDelegate.h"\n\n#import <React/RCTBundleURLProvider.h>\n+ #import <React/CoreModulesPlugins.h>\n+ #import <ReactCommon/RCTTurboModuleManager.h>\n+ #import <TurboModules/NativeSampleModule.h>\n\n+ @interface AppDelegate () <RCTTurboModuleManagerDelegate> {}\n+ @end\n\n// ...\n\n\u1806 (Class)getModuleClassFromName:(const char *)name\n{\n  return RCTCoreModulesClassProvider(name);\n}\n\n+ #pragma mark RCTTurboModuleManagerDelegate\n\n+ - (std::shared_ptr<facebook::react::TurboModule>)getTurboModule:(const std::string &)name\n+                                                       jsInvoker:(std::shared_ptr<facebook::react::CallInvoker>)jsInvoker\n+ {\n+   if (name == "NativeSampleModule") {\n+     return std::make_shared<facebook::react::NativeSampleModule>(jsInvoker);\n+   }\n+   return nullptr;\n+ }\n')),(0,a.kt)("p",null,"This will instantiante a ",(0,a.kt)("inlineCode",{parentName:"p"},"NativeSampleModule")," associated with the name ",(0,a.kt)("inlineCode",{parentName:"p"},"NativeSampleModule")," as defined in our JavaScript spec file earlier."),(0,a.kt)("h3",f({},{id:"android"}),"Android"),(0,a.kt)("p",null,"Android apps aren't setup for native code compilation by default."),(0,a.kt)("p",null,"1.) Create the folder ",(0,a.kt)("inlineCode",{parentName:"p"},"android/app/src/main/jni")),(0,a.kt)("p",null,"2.) Copy ",(0,a.kt)("inlineCode",{parentName:"p"},"CMakeLists.txt")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Onload.cpp")," from ",(0,a.kt)("a",f({parentName:"p"},{href:"https://github.com/facebook/react-native/tree/v0.71.0-rc.3/ReactAndroid/cmake-utils/default-app-setup"}),"node_modules/react-native/ReactAndroid/cmake-utils/default-app-setup")," into the ",(0,a.kt)("inlineCode",{parentName:"p"},"android/app/src/main/jni")," folder."),(0,a.kt)("p",null,"Update ",(0,a.kt)("inlineCode",{parentName:"p"},"Onload.cpp")," with the following entries:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-diff"}),'// ...\n\n#include <react/renderer/componentregistry/ComponentDescriptorProviderRegistry.h>\n#include <rncli.h>\n+ #include <NativeSampleModule.h>\n\n// ...\n\nstd::shared_ptr<TurboModule> cxxModuleProvider(\n    const std::string &name,\n    const std::shared_ptr<CallInvoker> &jsInvoker) {\n+ if (name == "NativeSampleModule") {\n+   return std::make_shared<facebook::react::NativeSampleModule>(jsInvoker);\n+ }\n  return nullptr;\n}\n\n// ...\n')),(0,a.kt)("p",null,"Update ",(0,a.kt)("inlineCode",{parentName:"p"},"CMakeLists.txt")," with the following entries, e.g., at the very end of that file:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-diff"}),"// ...\n\n# This file includes all the necessary to let you build your application with the New Architecture.\ninclude(${REACT_ANDROID_DIR}/cmake-utils/ReactNative-application.cmake)\n\n+ # App needs to add and link against tm (TurboModules) folder\n+ add_subdirectory(${REACT_ANDROID_DIR}/../../../tm/ tm_build)\n+ target_link_libraries(${CMAKE_PROJECT_NAME} tm)\n")),(0,a.kt)("p",null,"This will instantiante a ",(0,a.kt)("inlineCode",{parentName:"p"},"NativeSampleModule")," associated with the name ",(0,a.kt)("inlineCode",{parentName:"p"},"NativeSampleModule")," as defined in our JavaScript spec file earlier."),(0,a.kt)("h2",f({},{id:"4-c-native-code"}),"4. C++ Native Code"),(0,a.kt)("p",null,"For the final step, you'll need to write some native code to connect the JavaScript side to the native platforms. This process requires two main steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run ",(0,a.kt)("strong",{parentName:"li"},"Codegen")," to see what it generates."),(0,a.kt)("li",{parentName:"ul"},"Write your native code, implementing the generated interfaces.")),(0,a.kt)("h3",f({},{id:"run-codegen"}),"Run Codegen"),(0,a.kt)("admonition",f({},{title:"\u63d0\u793a",type:"info"}),(0,a.kt)("p",{parentName:"admonition"},"Follow the ",(0,a.kt)("a",f({parentName:"p"},{href:"./pillars-codegen"}),"Codegen")," guide for general information.")),(0,a.kt)("p",null,"On iOS Codegen is run each time you execute in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ios")," folder:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-sh"}),"RCT_NEW_ARCH_ENABLED=1 bundle exec pod install\n")),(0,a.kt)("p",null,"You can inspect the generated ",(0,a.kt)("inlineCode",{parentName:"p"},"AppSpecsJSI.h")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"AppSpecsJSI-generated.cpp")," files inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"CxxTurboModulesGuide/ios/build/generated/ios")," folder."),(0,a.kt)("p",null,"Those files are prefixed with ",(0,a.kt)("inlineCode",{parentName:"p"},"AppSpecs")," as this matches the ",(0,a.kt)("inlineCode",{parentName:"p"},"codegenConfig.name")," parameter added earlier to ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),"."),(0,a.kt)("p",null,"On Android Codegen is run each time you execute:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-sh"}),"yarn android\n")),(0,a.kt)("p",null,"You can inspect the generated ",(0,a.kt)("inlineCode",{parentName:"p"},"AppSpecsJSI.h")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"AppSpecsJSI-generated.cpp")," files inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"CxxTurboModulesGuide/android/app/build/generated/source/codegen/jni")," folder."),(0,a.kt)("p",null,"You only need to re-run codegen if you have changed your JavaScript spec."),(0,a.kt)("p",null,"The C++ function generated for our JavaScript spec file looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-cpp"}),"virtual jsi::String reverseString(jsi::Runtime &rt, jsi::String input) = 0;\n")),(0,a.kt)("p",null,"You can directly work with the lower level ",(0,a.kt)("inlineCode",{parentName:"p"},"jsi::")," types - but for convience C++ Turbo Native Modules automatically ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge")," into ",(0,a.kt)("inlineCode",{parentName:"p"},"std::")," types for you."),(0,a.kt)("h3",f({},{id:"implementation"}),"Implementation"),(0,a.kt)("p",null,"Now create a ",(0,a.kt)("inlineCode",{parentName:"p"},"NativeSampleModule.h")," file with the following content:"),(0,a.kt)("admonition",f({},{title:"\u5907\u6ce8",type:"note"}),(0,a.kt)("p",{parentName:"admonition"},"Due to current differences in the CMake and CocoaPod setup we need some creativity to include the correct Codegen header on each platform.")),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-cpp"}),'#pragma once\n\n#if __has_include(<React-Codegen/AppSpecsJSI.h>) // CocoaPod headers on Apple\n#include <React-Codegen/AppSpecsJSI.h>\n#elif __has_include("AppSpecsJSI.h") // CMake headers on Android\n#include "AppSpecsJSI.h"\n#endif\n#include <memory>\n#include <string>\n\nnamespace facebook::react {\n\nclass NativeSampleModule : public NativeSampleModuleCxxSpec<NativeSampleModule> {\n public:\n  NativeSampleModule(std::shared_ptr<CallInvoker> jsInvoker);\n\n  std::string reverseString(jsi::Runtime& rt, std::string input);\n};\n\n} // namespace facebook::react\n')),(0,a.kt)("p",null,"In this case you can use any C++ type which ",(0,a.kt)("inlineCode",{parentName:"p"},"bridges")," to a ",(0,a.kt)("inlineCode",{parentName:"p"},"jsi::String")," - default or ",(0,a.kt)("a",f({parentName:"p"},{href:"/docs/0.71/the-new-architecture/cxx-custom-types"}),"custom one"),". You can't specify an incompatible type such as ",(0,a.kt)("inlineCode",{parentName:"p"},"bool"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"float")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"std::vector<>")," as it does not ",(0,a.kt)("inlineCode",{parentName:"p"},"bridge")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"jsi::String")," and hence results in a compilation error."),(0,a.kt)("p",null,"Now add a ",(0,a.kt)("inlineCode",{parentName:"p"},"NativeSampleModule.cpp")," file with an implementation for it:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-cpp"}),'#include "NativeSampleModule.h"\n\nnamespace facebook::react {\n\nNativeSampleModule::NativeSampleModule(std::shared_ptr<CallInvoker> jsInvoker)\n    : NativeSampleModuleCxxSpec(std::move(jsInvoker)) {}\n\nstd::string NativeSampleModule::reverseString(jsi::Runtime& rt, std::string input) {\n  return std::string(input.rbegin(), input.rend());\n}\n\n} // namespace facebook::react\n')),(0,a.kt)("p",null,"As we have added new C++ files run in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ios")," folder:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-sh"}),"RCT_NEW_ARCH_ENABLED=1 bundle exec pod install\n")),(0,a.kt)("p",null,"for iOS. In Xcode they appear under the ",(0,a.kt)("inlineCode",{parentName:"p"},"Pods")," target in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Development Pods \\ TurboModules")," subfolder."),(0,a.kt)("p",null,"You should now be able to compile your app both on Android and iOS."),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-sh"}),"CxxTurboModulesGuide\n\u251c\u2500\u2500 android\n\u2502   \u2514\u2500\u2500 app\n\u2502       \u2502\u2500\u2500 src\n\u2502       \u2502   \u2514\u2500\u2500 main\n\u2502       \u2502       \u2514\u2500\u2500 jni\n\u2502       \u2502           \u251c\u2500\u2500 CMakeLists.txt\n\u2502       \u2502           \u2514\u2500\u2500 OnLoad.cpp\n\u2502       \u2514\u2500\u2500 build.gradle (updated)\n\u251c\u2500\u2500 ios\n\u2502   \u2514\u2500\u2500 CxxTurboModulesGuide\n\u2502       \u2514\u2500\u2500 AppDelegate.mm (updated)\n\u251c\u2500\u2500 js\n    \u2514\u2500\u2500 App.tsx|jsx (updated)\n\u2514\u2500\u2500 tm\n    \u251c\u2500\u2500 CMakeLists.txt\n    \u251c\u2500\u2500 NativeSampleModule.h\n    \u251c\u2500\u2500 NativeSampleModule.cpp\n    \u251c\u2500\u2500 NativeSampleModule.ts|js\n    \u2514\u2500\u2500 TurboModules.podspec\n")),(0,a.kt)("h2",f({},{id:"5-adding-the-c-turbo-native-module-to-your-app"}),"5. Adding the C++ Turbo Native Module to your App"),(0,a.kt)("p",null,"For demo purposes we can update our app's ",(0,a.kt)("inlineCode",{parentName:"p"},"App.tsx|jsx")," with the following entries:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-diff"}),"//...\nimport {\n  Colors,\n  DebugInstructions,\n  Header,\n  LearnMoreLinks,\n  ReloadInstructions,\n} from 'react-native/Libraries/NewAppScreen';\n+ import NativeSampleModule from './tm/NativeSampleModule';\n//...\n        <View\n          style={{\n            backgroundColor: isDarkMode ? Colors.black : Colors.white,\n          }}>\n+         <Section title=\"Cxx TurboModule\">\n+          NativeSampleModule.reverseString(...) ={' '}\n+          {NativeSampleModule.reverseString(\n+            'the quick brown fox jumps over the lazy dog'\n+          )}\n+         </Section>;\n          <Section title=\"Step One\">\n            Edit <Text style={styles.highlight}>App.tsx</Text> to change this\n            screen and then come back to see your edits.\n          </Section>\n//...\n")),(0,a.kt)("p",null,"Run the app to see your C++ Turbo Native Module in action!"),(0,a.kt)("h2",f({},{id:"app-turbomoduleprovider-optional"}),"App TurboModuleProvider ","[Optional]"),(0,a.kt)("p",null,"You can avoid some code duplication once you added multiple C++ Turbo Native Modules by declaring an AppTurboModuleProvider:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-cpp",metastring:'title="AppTurboModuleProvider.h"',title:'"AppTurboModuleProvider.h"'}),"#pragma once\n\n#include <ReactCommon/TurboModuleBinding.h>\n#include <memory>\n#include <string>\n\nnamespace facebook::react {\n\nclass AppTurboModuleProvider {\n public:\n  std::shared_ptr<TurboModule> getTurboModule(\n      const std::string& name,\n      std::shared_ptr<CallInvoker> jsInvoker) const;\n};\n\n} // namespace facebook::react\n")),(0,a.kt)("p",null,"And implementing it:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-cpp",metastring:'title="AppTurboModuleProvider.cpp"',title:'"AppTurboModuleProvider.cpp"'}),'#include "AppTurboModuleProvider.h"\n#include "NativeSampleModule.h"\n\nnamespace facebook::react {\n\nstd::shared_ptr<TurboModule> AppTurboModuleProvider::getTurboModule(\n    const std::string& name,\n    std::shared_ptr<CallInvoker> jsInvoker) const {\n  if (name == "NativeSampleModule") {\n    return std::make_shared<facebook::react::NativeSampleModule>(jsInvoker);\n  }\n  // Other C++ Turbo Native Modules for you app\n  return nullptr;\n}\n\n} // namespace facebook::react\n')),(0,a.kt)("p",null,"And then re-using it in ",(0,a.kt)("inlineCode",{parentName:"p"},"OnLoad.cpp")," for Android and ",(0,a.kt)("inlineCode",{parentName:"p"},"AppDelegate.mm")," for iOS, e.g., via:"),(0,a.kt)("pre",null,(0,a.kt)("code",f({parentName:"pre"},{className:"language-cpp"}),"static facebook::react::AppTurboModuleProvider appTurboModuleProvider;\nreturn appTurboModuleProvider.getTurboModule(name, jsInvoker);\n")),(0,a.kt)("p",null,"in the corresponding functions."),(0,a.kt)("h2",f({},{id:"calling-os-specific-apis"}),"Calling OS specific APIs"),(0,a.kt)("p",null,"You can still call OS specific functions in the compilation unit (e.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"NS/CF")," APIs on Apple or ",(0,a.kt)("inlineCode",{parentName:"p"},"Win32/WinRT")," APIs on Windows) as long as the method signatures only use ",(0,a.kt)("inlineCode",{parentName:"p"},"std::")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"jsi::")," types."),(0,a.kt)("p",null,"For Apple specific APIs you need to change the extension of your implementation file from ",(0,a.kt)("inlineCode",{parentName:"p"},".cpp")," to ",(0,a.kt)("inlineCode",{parentName:"p"},".mm")," to be able to consume ",(0,a.kt)("inlineCode",{parentName:"p"},"NS/CF")," APIs."),(0,a.kt)("h2",f({},{id:"extending-c-turbo-native-modules"}),"Extending C++ Turbo Native Modules"),(0,a.kt)("p",null,"If you need to support some types that are not supported yet, have a look at ",(0,a.kt)("a",f({parentName:"p"},{href:"/docs/0.71/the-new-architecture/cxx-custom-types"}),"this other guide"),"."))}C.isMDXComponent=!0}}]);